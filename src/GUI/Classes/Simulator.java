/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Classes;

import AuxClass.Cola;
import AuxClass.List;
import AuxClass.Nodo;
import MainClasses.CPU;
import MainClasses.Proceso;
import MainPackage.App;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FontFormatException;
import java.awt.Panel;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Angelo
 */
public class Simulator extends javax.swing.JFrame {

    /**
     * Creates new form Simulator
     */
    private final App app = App.getInstance();

    private String cycleDurationSetter;
    private int processorsQuantity;
    private DefaultListModel[] modelosCPU;

    private Thread simulationThread;

    public Simulator(String cycleDurationSetter, int processorsQuantity) {

        initComponents();

        this.processorsQuantity = 2;
        this.cycleDurationSetter = cycleDurationSetter;
        // CREACION DE PROCESADORES
        this.modelosCPU = createProcessors();

        // LABELS EN LA PARTE SUPERIOR
        updateAlgorithm();
        updatecycleDuration();

        this.setResizable(false);
        this.setSize(1100, 605);
        this.setLocationRelativeTo(null);

        // SOLO PARA VISUALIZACION
        createJScrollPaneOnReady();

        ////
        startSimulation();

    }

    private void startSimulation() {
        simulationThread = new Thread(() -> {
            while (true) {
                try {
                    SwingUtilities.invokeLater(() -> {
                        ejecutarProcesos(); 
                        actualizarInterfaz(); // Refresca la UI
                    });
                    Thread.sleep(1000); // Actualiza cada segundo
                } catch (InterruptedException e) {
                    e.printStackTrace();
                    break;
                }
            }
        });
        simulationThread.start();
    }
    
    

    private void ejecutarProcesos() {
        
        CPU currentCPU = app.getCpu();

        for (int i = 0; i < modelosCPU.length; i++) {
            if (currentCPU.getActualProceso() == null) {
                modelosCPU[i].clear();

                // Posible Ejecucion de SO
                modelosCPU[i].addElement("CPU " + (i + 1) + " VacÃ­o");
                continue;
            }

            // Obtener el proceso en la cabeza de la cola
            Proceso procesoActual = currentCPU.getActualProceso();

            if (procesoActual != null) {

                int marValue = procesoActual.getCant_instrucciones() - procesoActual.getTiempoRestante();
                procesoActual.getPCB_proceso().getAmbienteEjecucion().setMAR(marValue);
                procesoActual.getPCB_proceso().getAmbienteEjecucion().setPc(marValue + 1);
                

                modelosCPU[i].clear();
                modelosCPU[i].addElement("Proceso: " + procesoActual.getNombreProceso());
                modelosCPU[i].addElement("Instrucciones Restantes: " + procesoActual.getTiempoRestante());
                modelosCPU[i].addElement("PC: " + procesoActual.getPCB_proceso().getAmbienteEjecucion().getPc());
                modelosCPU[i].addElement("MAR: " + procesoActual.getPCB_proceso().getAmbienteEjecucion().getMAR());
            }
        }
    }

    private void actualizarInterfaz() {
        jPanel3.revalidate();
        jPanel3.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        auxPanelCPU = new javax.swing.JPanel();
        primaryPanelCPU = new javax.swing.JPanel();
        currentAlgorithmLabel = new javax.swing.JLabel();
        cycleDurationLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cpu2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        bloqueadosCPU1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        bloqueadosCPU2 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList<>();
        bloqueadosCPU3 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Salir = new javax.swing.JButton();
        CreateProcess = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        auxPanelCPU.setBackground(new java.awt.Color(56, 12, 36));
        auxPanelCPU.setLayout(new javax.swing.BoxLayout(auxPanelCPU, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(auxPanelCPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 180, 160));

        primaryPanelCPU.setBackground(new java.awt.Color(56, 12, 36));
        primaryPanelCPU.setLayout(new javax.swing.BoxLayout(primaryPanelCPU, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(primaryPanelCPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 330, 160));

        currentAlgorithmLabel.setForeground(new java.awt.Color(255, 215, 0));
        currentAlgorithmLabel.setText("Algoritmo actual:");
        jPanel1.add(currentAlgorithmLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 16, 130, 20));

        cycleDurationLabel.setForeground(new java.awt.Color(255, 215, 0));
        cycleDurationLabel.setText("Ciclos de reloj:");
        jPanel1.add(cycleDurationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 140, 30));

        jPanel3.setBackground(new java.awt.Color(56, 12, 36));
        jPanel3.setForeground(new java.awt.Color(75, 0, 130));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 750, 100));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 215, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cola Bloqueados CPU-3");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 210, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 215, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cola Bloqueados CPU-1");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, 210, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 215, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Cola Bloqueados CPU-2");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 210, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 140, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CPU-3");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 530, 80, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 140, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("CPU-1");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 80, 40));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 140, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("CPU-2");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 80, 40));

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        cpu2.setViewportView(jList2);

        jPanel1.add(cpu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 150, 140));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        bloqueadosCPU1.setViewportView(jList1);

        jPanel1.add(bloqueadosCPU1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, 120, 100));

        jList7.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        bloqueadosCPU2.setViewportView(jList7);

        jPanel1.add(bloqueadosCPU2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, 120, 100));

        jList6.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        bloqueadosCPU3.setViewportView(jList6);

        jPanel1.add(bloqueadosCPU3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 460, 120, 100));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 215, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cola de Listos");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 130, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Assets/solid-background-color.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 890, 580));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jPanel2.add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 110, 40));

        CreateProcess.setText("Interfaz de CreaciÃ³n");
        CreateProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateProcessActionPerformed(evt);
            }
        });
        jPanel2.add(CreateProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 140, 40));

        jButton4.setText("Simulador");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 110, 40));

        jButton5.setText("Estadistica");
        jButton5.setMaximumSize(new java.awt.Dimension(72, 23));
        jButton5.setMinimumSize(new java.awt.Dimension(72, 23));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 110, 40));

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 110, 40));

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        jPanel2.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 110, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Assets/background2.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 640));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 570));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createJScrollPaneOnReady() {

        jPanel3.setLayout(new BoxLayout(jPanel3, BoxLayout.X_AXIS));
        int gap = 10;

        Cola<Proceso> colaListos = app.getPlanificador().ColaListos;

        Nodo<Proceso> current = colaListos.getHead();

        while (current != null) {

            DefaultListModel<Object> modeloListos = new DefaultListModel<>();
            JList<Object> newJList = new JList<>(modeloListos);

            Proceso process = current.gettInfo();

            modeloListos.addElement(process);
            modeloListos.addElement(process.getNombreProceso());
            modeloListos.addElement(process.getCant_instrucciones());
            modeloListos.addElement(process.getPCB_proceso().getAmbienteEjecucion().getPc());
            modeloListos.addElement(process.getPCB_proceso().getAmbienteEjecucion().getMAR());
            modeloListos.addElement(process.getPCB_proceso().getAmbienteEjecucion().getPsw());

            JScrollPane scrollPane = new JScrollPane(newJList);
            Dimension dimensionScrollPane = new Dimension(30, 20);

            scrollPane.setPreferredSize(dimensionScrollPane);

            jPanel3.add(scrollPane);

            jPanel3.add(Box.createRigidArea(new Dimension(gap, 0)));

            current = current.getpNext();
        }

        jPanel3.revalidate();
        jPanel3.repaint();
    }

    private void updateAlgorithm() {
        String currentAlgorithm = app.getPlanificador().getNombreAlgoritmo();
        currentAlgorithmLabel.setText("Algoritmo Actual: " + currentAlgorithm);
    }

    private DefaultListModel[] createProcessors() {
        int gap = 10;
        int processors = this.processorsQuantity;

        // Forma interactiva de mostrar el tercer cpu
        auxPanelCPU.setVisible(processors != 2);
        jLabel7.setVisible(processors != 2);

        DefaultListModel<String>[] modelosCPU = new DefaultListModel[processors];
        JList[] cpuLists = new JList[processors];
        JScrollPane[] scrollPanes = new JScrollPane[processors];
        Dimension dimensionScrollPane = new Dimension(30, 20);

        for (int i = 0; i < processors; i++) {
            modelosCPU[i] = new DefaultListModel<>();
            cpuLists[i] = new JList(modelosCPU[i]);
            scrollPanes[i] = new JScrollPane(cpuLists[i]);
            scrollPanes[i].setPreferredSize(dimensionScrollPane);
            addProcessorToPanel(scrollPanes[i], i, processors, gap);
        }

        primaryPanelCPU.repaint();
        primaryPanelCPU.revalidate();

        auxPanelCPU.repaint();
        auxPanelCPU.revalidate();

        return modelosCPU;
    }

    private void addProcessorToPanel(JScrollPane scrollPane, int index, int totalProcessors, int gap) {
        if (totalProcessors == 2 || index < 2) {
            primaryPanelCPU.add(scrollPane);
            primaryPanelCPU.add(Box.createRigidArea(new Dimension(gap, 0)));
        } else {
            auxPanelCPU.add(scrollPane);
            auxPanelCPU.add(Box.createRigidArea(new Dimension(gap, 0)));
        }
    }

    private void updatecycleDuration() {
        String cycleDurationString = String.valueOf(this.cycleDurationSetter);
        cycleDurationLabel.setText("Ciclos de reloj: " + cycleDurationString);
    }

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirActionPerformed


    private void CreateProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateProcessActionPerformed
        try {
            ProcessMaker processMakerWindow = new ProcessMaker();
            this.setVisible(false);
            processMakerWindow.setVisible(true);
        } catch (FontFormatException | IOException ex) {
            Logger.getLogger(Simulator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CreateProcessActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed

        Home home = new Home();
        this.setVisible(false);
        home.setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateProcess;
    private javax.swing.JButton Salir;
    private javax.swing.JPanel auxPanelCPU;
    private javax.swing.JScrollPane bloqueadosCPU1;
    private javax.swing.JScrollPane bloqueadosCPU2;
    private javax.swing.JScrollPane bloqueadosCPU3;
    private javax.swing.JScrollPane cpu2;
    private javax.swing.JLabel currentAlgorithmLabel;
    private javax.swing.JLabel cycleDurationLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList6;
    private javax.swing.JList<String> jList7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel primaryPanelCPU;
    // End of variables declaration//GEN-END:variables
}
